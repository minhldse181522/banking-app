model Beneficiary {
  id                     BigInt           @id @default(autoincrement())
     
  userId                 BigInt            @map("user_id")
  bankingAccountId       BigInt            @map("banking_account_id")
  externalAccountNumber  String?           @map("external_account_number") @db.VarChar(200)
  externalBankName       String?           @map("external_account_name") @db.VarChar(200)
  nickName               String?           @map("nick_name") @db.VarChar(100)
      
  createdAt              DateTime          @default(now()) @map("created_at") @db.Timestamptz(3)
  createdBy              String?           @map("created_by") @db.VarChar(36)
  updatedAt              DateTime?         @updatedAt @map("modified_at") @db.Timestamptz(3)
  updatedBy              String?           @map("modified_by") @db.VarChar(36)

  user              User            @relation(fields: [userId], references: [id], onUpdate: Cascade)
  internalAccount   BankingAccount  @relation("banking_beneficiary", fields: [bankingAccountId], references: [id], onUpdate: Cascade)

  @@map("dt_beneficiary")
}